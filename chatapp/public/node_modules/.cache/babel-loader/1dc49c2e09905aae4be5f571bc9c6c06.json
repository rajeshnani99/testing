{"ast":null,"code":"import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n/**\n * @param handlers -\n * @internal\n */\n\nfunction useTapGesture(_ref) {\n  let {\n    onTap,\n    onTapStart,\n    onTapCancel,\n    whileTap,\n    visualElement,\n    ...props\n  } = _ref;\n  const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n  const isPressing = useRef(false);\n  const cancelPointerEndListeners = useRef(null);\n  /**\n   * Only set listener to passive if there are no external listeners.\n   */\n\n  const eventOptions = {\n    passive: !(onTapStart || onTap || onTapCancel || props[\"onPointerDown\"])\n  };\n\n  function removePointerEndListener() {\n    cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n    cancelPointerEndListeners.current = null;\n  }\n\n  function checkPointerEnd() {\n    removePointerEndListener();\n    isPressing.current = false;\n    const latestProps = visualElement.getProps();\n\n    if (latestProps.whileTap && visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Tap, false);\n    }\n\n    return !isDragActive();\n  }\n\n  function onPointerUp(event, info) {\n    var _a, _b, _c, _d;\n\n    if (!checkPointerEnd()) return;\n    /**\n     * We only count this as a tap gesture if the event.target is the same\n     * as, or a child of, this component's element\n     */\n\n    !isNodeOrChild(visualElement.current, event.target) ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info) : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n  }\n\n  function onPointerCancel(event, info) {\n    var _a, _b;\n\n    if (!checkPointerEnd()) return;\n    (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n  }\n\n  const startPress = useCallback((event, info) => {\n    var _a;\n\n    removePointerEndListener();\n    if (isPressing.current) return;\n    isPressing.current = true;\n    cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n    const latestProps = visualElement.getProps();\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    if (latestProps.whileTap && visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Tap, true);\n    }\n\n    (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n  }, [Boolean(onTapStart), visualElement]);\n  usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n  useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };","map":{"version":3,"names":["useRef","useCallback","isNodeOrChild","addPointerEvent","usePointerEvent","useUnmountEffect","AnimationType","isDragActive","pipe","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","visualElement","props","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","passive","removePointerEndListener","current","checkPointerEnd","latestProps","getProps","animationState","setActive","Tap","onPointerUp","event","info","_a","_b","_c","_d","target","call","onPointerCancel","startPress","window","Boolean","undefined"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs"],"sourcesContent":["import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}