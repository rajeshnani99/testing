{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Desktop/ChatApp/reactchatapp/public/src/components/Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport Logo from '../assets/logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contacts(_ref) {\n  _s();\n\n  let {\n    contacts,\n    currentUser,\n    changeChat\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserImage(currentUser.avatarImage);\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserImage && currentUserName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"RChat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\",\n        children: contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n            onClick: () => changeCurrentChat(index, contact),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: contact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 45\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${currentUserImage}`,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contacts, \"wTP9W2PvLtuLn6SrLcOO3R23lWI=\");\n\n_c = Contacts;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 2rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: #ffffff34;\n      min-height: 5rem;\n      cursor: pointer;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n          text-transform: capitalize;\n        }\n      }\n    }\n    .selected {\n      background-color: #9a86f3;\n    }\n  }\n  .current-user {\n    background-color: #0d0d30;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    }\n    .username {\n      h2 {\n        color: white;\n        text-transform: capitalize;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","Logo","Contacts","contacts","currentUser","changeChat","currentUserName","setCurrentUserName","undefined","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","avatarImage","username","changeCurrentChat","index","contact","map","_id","Container","div"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/src/components/Contacts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from \"styled-components\"\nimport Logo from '../assets/logo.svg'\n\nexport default function Contacts({ contacts, currentUser, changeChat }) {\n    const [currentUserName, setCurrentUserName] = useState(undefined);\n    const [currentUserImage, setCurrentUserImage] = useState(undefined);\n    const [currentSelected, setCurrentSelected] = useState(undefined);\n\n    useEffect(() => {\n        if (currentUser) {\n            setCurrentUserImage(currentUser.avatarImage);\n            setCurrentUserName(currentUser.username);\n        }\n    }, [currentUser]);\n\n    const changeCurrentChat = (index, contact) => { \n        setCurrentSelected(index);\n        changeChat(contact);\n    };\n    return (\n        <>\n            {\n                currentUserImage && currentUserName && (\n                    <Container>\n                        <div className=\"brand\">\n                            <img src={Logo} alt=\"logo\" />\n                            <h3>RChat</h3>\n                        </div>\n                        <div className=\"contacts\">\n                            {\n                                contacts.map((contact, index) => {\n                                    return (\n                                        <div\n                                         className={`contact ${\n                                            index === currentSelected ? \"selected\" : \"\"\n                                            }`}\n                                             key={contact._id}\n                                              onClick={()=>changeCurrentChat(index,contact)}>\n                                            <div className=\"avatar\">\n                                                <img src={`data:image/svg+xml;base64,${contact.avatarImage}`} alt=\"avatar\" />\n                                            </div>\n                                            <div className=\"username\">\n                                                <h3>{contact.username}</h3>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"current-user\">\n                        <div className=\"avatar\">\n                                                <img src={`data:image/svg+xml;base64,${currentUserImage}`} alt=\"avatar\" />\n                                            </div>\n                                            <div className=\"username\">\n                                                <h2>{currentUserName}</h2>\n                                            </div>\n                        </div>\n                    </Container>\n                )\n            }\n        </>\n    )\n}\n\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 2rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: #ffffff34;\n      min-height: 5rem;\n      cursor: pointer;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n          text-transform: capitalize;\n        }\n      }\n    }\n    .selected {\n      background-color: #9a86f3;\n    }\n  }\n  .current-user {\n    background-color: #0d0d30;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    }\n    .username {\n      h2 {\n        color: white;\n        text-transform: capitalize;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}