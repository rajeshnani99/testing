{"ast":null,"code":"import { NativeImage } from \"./chunk-QBIO4VEB.mjs\";\nimport { shouldShowFallbackImage, useImage } from \"./chunk-HR33I6FK.mjs\"; // src/image.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\"; // ../../utilities/object-utils/src/index.ts\n\nfunction omit(object) {\n  let keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const clone = Object.assign({}, object);\n\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n\n  return clone;\n} // src/image.tsx\n\n\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({ ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]))\n  };\n\n  if (showFallbackImage) {\n    if (fallback) return fallback;\n    return /* @__PURE__ */jsx(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n\n  return /* @__PURE__ */jsx(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage.displayName = \"Image\";\nexport { Image };","map":{"version":3,"names":["NativeImage","shouldShowFallbackImage","useImage","chakra","forwardRef","omit","object","keysToOmit","clone","Object","assign","key","jsx","Image","Image2","props","ref","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","rest","providedFallback","shouldIgnoreFallbackImage","status","showFallbackImage","shared","objectFit","objectPosition","img","as","className","displayName"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/node_modules/@chakra-ui/image/dist/chunk-E77276RR.mjs"],"sourcesContent":["import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n"],"mappings":"AAAA,SACEA,WADF,QAEO,sBAFP;AAGA,SACEC,uBADF,EAEEC,QAFF,QAGO,sBAHP,C,CAKA;;AACA,SACEC,MADF,EAEEC,UAFF,QAGO,mBAHP,C,CAKA;;AACA,SAASC,IAAT,CAAcC,MAAd,EAAuC;EAAA,IAAjBC,UAAiB,uEAAJ,EAAI;EACrC,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,CAAd;;EACA,KAAK,MAAMK,GAAX,IAAkBJ,UAAlB,EAA8B;IAC5B,IAAII,GAAG,IAAIH,KAAX,EAAkB;MAChB,OAAOA,KAAK,CAACG,GAAD,CAAZ;IACD;EACF;;EACD,OAAOH,KAAP;AACD,C,CAED;;;AACA,SAASI,GAAT,QAAoB,mBAApB;AACA,IAAIC,KAAK,GAAGT,UAAU,CAAC,SAASU,MAAT,CAAgBC,KAAhB,EAAuBC,GAAvB,EAA4B;EACjD,MAAM;IACJC,WADI;IAEJC,QAFI;IAGJC,GAHI;IAIJC,MAJI;IAKJC,KALI;IAMJC,GANI;IAOJC,OAPI;IAQJC,cARI;IASJC,WATI;IAUJC,gBAAgB,GAAG,mBAVf;IAWJC,cAXI;IAYJ,GAAGC;EAZC,IAaFb,KAbJ;EAcA,MAAMc,gBAAgB,GAAGZ,WAAW,KAAK,KAAK,CAArB,IAA0BC,QAAQ,KAAK,KAAK,CAArE;EACA,MAAMY,yBAAyB,GAAGP,OAAO,IAAI,IAAX,IAAmBC,cAAnB,IAAqC,CAACK,gBAAxE;EACA,MAAME,MAAM,GAAG7B,QAAQ,CAAC,EACtB,GAAGa,KADmB;IAEtBS,cAAc,EAAEM;EAFM,CAAD,CAAvB;EAIA,MAAME,iBAAiB,GAAG/B,uBAAuB,CAAC8B,MAAD,EAASL,gBAAT,CAAjD;EACA,MAAMO,MAAM,GAAG;IACbjB,GADa;IAEbkB,SAAS,EAAEZ,GAFE;IAGba,cAAc,EAAEd,KAHH;IAIb,IAAGS,yBAAyB,GAAGF,IAAH,GAAUvB,IAAI,CAACuB,IAAD,EAAO,CAAC,SAAD,EAAY,QAAZ,CAAP,CAA1C;EAJa,CAAf;;EAMA,IAAII,iBAAJ,EAAuB;IACrB,IAAId,QAAJ,EACE,OAAOA,QAAP;IACF,OAAO,eAAgBN,GAAG,CACxBT,MAAM,CAACiC,GADiB,EAExB;MACEC,EAAE,EAAErC,WADN;MAEEsC,SAAS,EAAE,2BAFb;MAGEnB,GAAG,EAAEF,WAHP;MAIE,GAAGgB;IAJL,CAFwB,CAA1B;EASD;;EACD,OAAO,eAAgBrB,GAAG,CACxBT,MAAM,CAACiC,GADiB,EAExB;IACEC,EAAE,EAAErC,WADN;IAEEmB,GAFF;IAGEC,MAHF;IAIEK,WAJF;IAKEF,OALF;IAMEI,cANF;IAOEW,SAAS,EAAE,cAPb;IAQE,GAAGL;EARL,CAFwB,CAA1B;AAaD,CAtDqB,CAAtB;AAuDApB,KAAK,CAAC0B,WAAN,GAAoB,OAApB;AAEA,SACE1B,KADF"},"metadata":{},"sourceType":"module"}