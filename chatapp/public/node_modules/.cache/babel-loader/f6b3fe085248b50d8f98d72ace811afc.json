{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Desktop/Dev/chatapp/public/src/components/ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute, allChats, sendMessageGroup } from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket,\n    groupChatName,\n    activeComponent\n  } = _ref;\n  console.log(`current chat :${JSON.stringify(currentChat)}`); // console.log(`current user : ${JSON.stringify(currentUser)}`);\n\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [arrivalGroupMessage, setArrivalGroupMessage] = useState(null);\n  const [groupmessages, setGroupmessages] = useState([]);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessagesRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n        console.log(response); //fetching single person chat Messages from db\n\n        console.log(\"chat message :\" + JSON.stringify(response.data));\n      }\n    };\n\n    fetchData();\n  }, [currentChat]);\n  useEffect(() => {\n    const fetchGroup = async () => {\n      if (currentChat) {\n        const response = await axios.get(allChats);\n        setGroupmessages(response.data);\n      }\n    };\n\n    fetchGroup();\n  }); //console.log(`group chat data :${JSON.stringify(groupmessages)}`);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    console.log(`messages :${JSON.stringify(msgs)}`);\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs); // post message to db and emitting server\n    //console.log(\"sent Message :\" + JSON.stringify(msgs));\n  };\n\n  const handleGroupMsg = async msg => {\n    await axios.post(sendMessageGroup, {\n      name: currentUser.name,\n      from: currentUser._id,\n      to: currentChat._id,\n      messages: msg\n    });\n    const msgs = [...messages];\n    console.log(`messages :${JSON.stringify(msgs)}`);\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setGroupmessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieved\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    arrivalGroupMessage && setGroupmessages(prev => [...prev, arrivalGroupMessage]);\n  }, [arrivalGroupMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  console.log(`arrivalgroup message :${arrivalGroupMessage}`);\n  let chats = true; //console.log(\"Group chat name : \" + JSON.stringify(groupChatName));\n  // for (let key in groupChatName) {\n  // \tconsole.log(`groupchat Name : ${groupChatName[key].name}`);\n  // }\n  //console.log(JSON.stringify(messages));\n  //console.log(`current chat data :  ${JSON.stringify(currentChat)}`);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: activeComponent ? currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 14\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 12\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this) : groupChatName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: groupmessages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: groupChatName.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 14\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 12\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleGroupMsg: handleGroupMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatContainer, \"u8AE1/LyJTwnu4Ewft2rISc7dxg=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 10% 80% 10%;\n\tgap: 0.1rem;\n\toverflow: hidden;\n\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\tgrid-template-rows: 15% 70% 15%;\n\t}\n\t.chat-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0 2rem;\n\t\t.user-details {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 1rem;\n\t\t\t.avatar {\n\t\t\t\timg {\n\t\t\t\t\theight: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.username {\n\t\t\t\th3 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.chat-messages {\n\t\tpadding: 1rem 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 1rem;\n\t\toverflow: auto;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 0.2rem;\n\t\t\t&-thumb {\n\t\t\t\tbackground-color: #ffffff39;\n\t\t\t\twidth: 0.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t}\n\t\t}\n\t\t.message {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t.content {\n\t\t\t\tmax-width: 40%;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t\tcolor: #d1d1d1;\n\t\t\t\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\t\t\t\tmax-width: 70%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.sended {\n\t\t\tjustify-content: flex-end;\n\t\t\t.content {\n\t\t\t\tbackground-color: #4f04ff21;\n\t\t\t}\n\t\t}\n\t\t.recieved {\n\t\t\tjustify-content: flex-start;\n\t\t\t.content {\n\t\t\t\tbackground-color: #9900ff20;\n\t\t\t}\n\t\t}\n\t}\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","axios","getAllMessagesRoute","sendMessageRoute","allChats","sendMessageGroup","v4","uuidv4","ChatContainer","currentChat","currentUser","socket","groupChatName","activeComponent","console","log","JSON","stringify","messages","setMessages","arrivalMessage","setArrivalMessage","arrivalGroupMessage","setArrivalGroupMessage","groupmessages","setGroupmessages","scrollRef","fetchData","response","post","from","_id","to","data","fetchGroup","get","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","handleGroupMsg","name","on","prev","scrollIntoView","behavior","chats","avatarImage","username","map","Container","div"],"sources":["/Users/rajesh/Desktop/Dev/chatapp/public/src/components/ChatContainer.jsx"],"sourcesContent":["/** @format */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport {\n\tgetAllMessagesRoute,\n\tsendMessageRoute,\n\tallChats,\n\tsendMessageGroup,\n} from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function ChatContainer({\n\tcurrentChat,\n\tcurrentUser,\n\tsocket,\n\tgroupChatName,\n\tactiveComponent,\n}) {\n\tconsole.log(`current chat :${JSON.stringify(currentChat)}`);\n\t// console.log(`current user : ${JSON.stringify(currentUser)}`);\n\tconst [messages, setMessages] = useState([]);\n\tconst [arrivalMessage, setArrivalMessage] = useState(null);\n\tconst [arrivalGroupMessage, setArrivalGroupMessage] = useState(null);\n\tconst [groupmessages, setGroupmessages] = useState([]);\n\n\tconst scrollRef = useRef();\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tif (currentChat) {\n\t\t\t\tconst response = await axios.post(getAllMessagesRoute, {\n\t\t\t\t\tfrom: currentUser._id,\n\t\t\t\t\tto: currentChat._id,\n\t\t\t\t});\n\t\t\t\tsetMessages(response.data);\n\t\t\t\tconsole.log(response);\n\t\t\t\t//fetching single person chat Messages from db\n\t\t\t\tconsole.log(\"chat message :\" + JSON.stringify(response.data));\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [currentChat]);\n\n\tuseEffect(() => {\n\t\tconst fetchGroup = async () => {\n\t\t\tif (currentChat) {\n\t\t\t\tconst response = await axios.get(allChats);\n\t\t\t\tsetGroupmessages(response.data);\n\t\t\t}\n\t\t};\n\t\tfetchGroup();\n\t});\n\t//console.log(`group chat data :${JSON.stringify(groupmessages)}`);\n\n\tconst handleSendMsg = async (msg) => {\n\t\tawait axios.post(sendMessageRoute, {\n\t\t\tfrom: currentUser._id,\n\t\t\tto: currentChat._id,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsocket.current.emit(\"send-msg\", {\n\t\t\tto: currentChat._id,\n\t\t\tfrom: currentUser._id,\n\t\t\tmessage: msg,\n\t\t});\n\n\t\tconst msgs = [...messages];\n\t\tconsole.log(`messages :${JSON.stringify(msgs)}`);\n\t\tmsgs.push({\n\t\t\tfromSelf: true,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsetMessages(msgs);\n\t\t// post message to db and emitting server\n\t\t//console.log(\"sent Message :\" + JSON.stringify(msgs));\n\t};\n\n\tconst handleGroupMsg = async (msg) => {\n\t\tawait axios.post(sendMessageGroup, {\n\t\t\tname: currentUser.name,\n\t\t\tfrom: currentUser._id,\n\t\t\tto: currentChat._id,\n\t\t\tmessages: msg,\n\t\t});\n\t\tconst msgs = [...messages];\n\t\tconsole.log(`messages :${JSON.stringify(msgs)}`);\n\t\tmsgs.push({\n\t\t\tfromSelf: true,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsetGroupmessages(msgs);\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket.current) {\n\t\t\tsocket.current.on(\"msg-recieved\", (msg) => {\n\t\t\t\tsetArrivalMessage({\n\t\t\t\t\tfromSelf: false,\n\t\t\t\t\tmessage: msg,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tarrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n\t}, [arrivalMessage]);\n\n\tuseEffect(() => {\n\t\tarrivalGroupMessage &&\n\t\t\tsetGroupmessages((prev) => [...prev, arrivalGroupMessage]);\n\t}, [arrivalGroupMessage]);\n\n\tuseEffect(() => {\n\t\tscrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n\t}, [messages]);\n\n\tconsole.log(`arrivalgroup message :${arrivalGroupMessage}`);\n\n\tlet chats = true;\n\t//console.log(\"Group chat name : \" + JSON.stringify(groupChatName));\n\t// for (let key in groupChatName) {\n\t// \tconsole.log(`groupchat Name : ${groupChatName[key].name}`);\n\t// }\n\t//console.log(JSON.stringify(messages));\n\t//console.log(`current chat data :  ${JSON.stringify(currentChat)}`);\n\n\treturn (\n\t\t<>\n\t\t\t{/* {currentChat && groupChatName && (\n\t\t\t\t<Container>\n\t\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n\t\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t<h3>{currentChat.username}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Logout />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t{messages.map((message) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div ref={scrollRef} key={uuidv4()}>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\t\t\tmessage.fromSelf ? \"sended\" : \"recieved\"\n\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"content \">\n\t\t\t\t\t\t\t\t\t\t\t<p>{message.message}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<ChatInput handleSendMsg={handleSendMsg} />\n\t\t\t\t</Container>\n\t\t\t)} */}\n\t\t\t{activeComponent\n\t\t\t\t? currentChat && (\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n\t\t\t\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t\t\t<h3>{currentChat.username}</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t\t\t{messages.map((message) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div ref={scrollRef} key={uuidv4()}>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.fromSelf ? \"sended\" : \"recieved\"\n\t\t\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{message.message}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ChatInput handleSendMsg={handleSendMsg} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t  )\n\t\t\t\t: groupChatName && (\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n\t\t\t\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t\t\t<h3>{currentChat.name}</h3>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t\t\t{groupmessages.map((message) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div ref={scrollRef} key={uuidv4()}>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage.fromSelf ? \"sended\" : \"recieved\"\n\t\t\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{groupChatName.message}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ChatInput handleGroupMsg={handleGroupMsg} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t  )}\n\t\t</>\n\t);\n}\n\nconst Container = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 10% 80% 10%;\n\tgap: 0.1rem;\n\toverflow: hidden;\n\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\tgrid-template-rows: 15% 70% 15%;\n\t}\n\t.chat-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0 2rem;\n\t\t.user-details {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 1rem;\n\t\t\t.avatar {\n\t\t\t\timg {\n\t\t\t\t\theight: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.username {\n\t\t\t\th3 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.chat-messages {\n\t\tpadding: 1rem 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 1rem;\n\t\toverflow: auto;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 0.2rem;\n\t\t\t&-thumb {\n\t\t\t\tbackground-color: #ffffff39;\n\t\t\t\twidth: 0.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t}\n\t\t}\n\t\t.message {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t.content {\n\t\t\t\tmax-width: 40%;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t\tcolor: #d1d1d1;\n\t\t\t\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\t\t\t\tmax-width: 70%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.sended {\n\t\t\tjustify-content: flex-end;\n\t\t\t.content {\n\t\t\t\tbackground-color: #4f04ff21;\n\t\t\t}\n\t\t}\n\t\t.recieved {\n\t\t\tjustify-content: flex-start;\n\t\t\t.content {\n\t\t\t\tbackground-color: #9900ff20;\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}