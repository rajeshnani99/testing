{"ast":null,"code":"import { useMediaQuery } from \"./chunk-MG6WC47T.mjs\"; // src/use-breakpoint.ts\n\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\n\nfunction useBreakpoint(arg) {\n  var _a, _b;\n\n  const opts = isObject(arg) ? arg : {\n    fallback: arg != null ? arg : \"base\"\n  };\n  const theme = useTheme();\n\n  const breakpoints = theme.__breakpoints.details.map(_ref => {\n    let {\n      minMaxQuery,\n      breakpoint\n    } = _ref;\n    return {\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  const fallback = breakpoints.map(bp => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map(bp => bp.query), {\n    fallback,\n    ssr: opts.ssr\n  });\n  const index = values.findIndex(value => value == true);\n  return (_b = (_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) != null ? _b : opts.fallback;\n}\n\nexport { useBreakpoint };","map":{"version":3,"names":["useMediaQuery","useTheme","isObject","useBreakpoint","arg","_a","_b","opts","fallback","theme","breakpoints","__breakpoints","details","map","minMaxQuery","breakpoint","query","replace","bp","values","ssr","index","findIndex","value"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/node_modules/@chakra-ui/media-query/dist/chunk-CI3LDA6F.mjs"],"sourcesContent":["import {\n  useMediaQuery\n} from \"./chunk-MG6WC47T.mjs\";\n\n// src/use-breakpoint.ts\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction useBreakpoint(arg) {\n  var _a, _b;\n  const opts = isObject(arg) ? arg : { fallback: arg != null ? arg : \"base\" };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    })\n  );\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr }\n  );\n  const index = values.findIndex((value) => value == true);\n  return (_b = (_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) != null ? _b : opts.fallback;\n}\n\nexport {\n  useBreakpoint\n};\n"],"mappings":"AAAA,SACEA,aADF,QAEO,sBAFP,C,CAIA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EAC1B,IAAIC,EAAJ,EAAQC,EAAR;;EACA,MAAMC,IAAI,GAAGL,QAAQ,CAACE,GAAD,CAAR,GAAgBA,GAAhB,GAAsB;IAAEI,QAAQ,EAAEJ,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB;EAAhC,CAAnC;EACA,MAAMK,KAAK,GAAGR,QAAQ,EAAtB;;EACA,MAAMS,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BC,GAA5B,CAClB;IAAA,IAAC;MAAEC,WAAF;MAAeC;IAAf,CAAD;IAAA,OAAkC;MAChCA,UADgC;MAEhCC,KAAK,EAAEF,WAAW,CAACG,OAAZ,CAAoB,oBAApB,EAA0C,EAA1C;IAFyB,CAAlC;EAAA,CADkB,CAApB;;EAMA,MAAMT,QAAQ,GAAGE,WAAW,CAACG,GAAZ,CAAiBK,EAAD,IAAQA,EAAE,CAACH,UAAH,KAAkBR,IAAI,CAACC,QAA/C,CAAjB;EACA,MAAMW,MAAM,GAAGnB,aAAa,CAC1BU,WAAW,CAACG,GAAZ,CAAiBK,EAAD,IAAQA,EAAE,CAACF,KAA3B,CAD0B,EAE1B;IAAER,QAAF;IAAYY,GAAG,EAAEb,IAAI,CAACa;EAAtB,CAF0B,CAA5B;EAIA,MAAMC,KAAK,GAAGF,MAAM,CAACG,SAAP,CAAkBC,KAAD,IAAWA,KAAK,IAAI,IAArC,CAAd;EACA,OAAO,CAACjB,EAAE,GAAG,CAACD,EAAE,GAAGK,WAAW,CAACW,KAAD,CAAjB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6ChB,EAAE,CAACU,UAAtD,KAAqE,IAArE,GAA4ET,EAA5E,GAAiFC,IAAI,CAACC,QAA7F;AACD;;AAED,SACEL,aADF"},"metadata":{},"sourceType":"module"}