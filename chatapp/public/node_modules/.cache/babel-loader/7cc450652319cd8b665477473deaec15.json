{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Desktop/ChatApp/reactchatapp/public/src/components/ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from \"styled-components\";\nimport ChatInput from './ChatInput';\nimport Logout from './Logout';\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute } from '../utils/APIRoutes';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessagesRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n      }\n    };\n\n    fetchData();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieved\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatContainer, \"JfFSEdQKAcT6qp/80mIe4QU2dtg=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n          text-transform: capitalize;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","axios","getAllMessagesRoute","sendMessageRoute","v4","uuidv4","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","scrollRef","fetchData","response","post","from","_id","to","data","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","prev","scrollIntoView","behavior","avatarImage","username","map","Container","div"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useState, useEffect , useRef} from 'react'\nimport styled from \"styled-components\"\nimport ChatInput from './ChatInput';\nimport Logout from './Logout';\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute } from '../utils/APIRoutes'\nimport { v4 as uuidv4} from \"uuid\";\n\nexport default function ChatContainer({ currentChat, currentUser, socket }) {\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n      if(currentChat){\n        const response = await axios.post(getAllMessagesRoute, {\n          from: currentUser._id,\n          to: currentChat._id,\n        });\n        setMessages(response.data);\n      }\n    }\n    fetchData();\n  }, [currentChat]);\n\n  const handleSendMsg = async (msg) => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg,\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg,\n    });\n\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg,\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieved\", (msg) => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg,\n        });\n      })\n    }\n  }, []);\n\n  useEffect(()=>{\n    arrivalMessage && setMessages((prev)=>[...prev,arrivalMessage]);\n  },[arrivalMessage]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <>\n      {\n        currentChat && (\n          <Container>\n            <div className=\"chat-header\">\n              <div className=\"user-details\">\n                <div className=\"avatar\">\n                  <img\n                    src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n                    alt=\"avatar\" />\n                </div>\n                <div className=\"username\">\n                  <h3>{currentChat.username}</h3>\n                </div>\n              </div>\n              <Logout />\n            </div>\n            <div className=\"chat-messages\">\n              {messages.map((message) => {\n                return (\n                  <div ref={scrollRef} key={uuidv4()}>\n                    <div \n                      className={`message ${message.fromSelf ?\n                        \"sended\" :\n                        \"recieved\"\n                        }`}\n                    >\n                      <div className=\"content \">\n                        <p>{message.message}</p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <ChatInput handleSendMsg={handleSendMsg} />\n          </Container>\n        )\n      }\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n          text-transform: capitalize;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,oBAAtD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA4B,MAA5B;;;AAEA,eAAe,SAASC,aAAT,OAA6D;EAAA;;EAAA,IAAtC;IAAEC,WAAF;IAAeC,WAAf;IAA4BC;EAA5B,CAAsC;EAC1E,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,IAAD,CAApD;EACA,MAAMmB,SAAS,GAAGjB,MAAM,EAAxB;EAEAD,SAAS,CAAC,MAAM;IAEd,MAAMmB,SAAS,GAAG,YAAY;MAC5B,IAAGR,WAAH,EAAe;QACb,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAWf,mBAAX,EAAgC;UACrDgB,IAAI,EAAEV,WAAW,CAACW,GADmC;UAErDC,EAAE,EAAEb,WAAW,CAACY;QAFqC,CAAhC,CAAvB;QAIAR,WAAW,CAACK,QAAQ,CAACK,IAAV,CAAX;MACD;IACF,CARD;;IASAN,SAAS;EACV,CAZQ,EAYN,CAACR,WAAD,CAZM,CAAT;;EAcA,MAAMe,aAAa,GAAG,MAAOC,GAAP,IAAe;IACnC,MAAMtB,KAAK,CAACgB,IAAN,CAAWd,gBAAX,EAA6B;MACjCe,IAAI,EAAEV,WAAW,CAACW,GADe;MAEjCC,EAAE,EAAEb,WAAW,CAACY,GAFiB;MAGjCK,OAAO,EAAED;IAHwB,CAA7B,CAAN;IAKAd,MAAM,CAACgB,OAAP,CAAeC,IAAf,CAAoB,UAApB,EAAgC;MAC9BN,EAAE,EAAEb,WAAW,CAACY,GADc;MAE9BD,IAAI,EAAEV,WAAW,CAACW,GAFY;MAG9BK,OAAO,EAAED;IAHqB,CAAhC;IAMA,MAAMI,IAAI,GAAG,CAAC,GAAGjB,QAAJ,CAAb;IACAiB,IAAI,CAACC,IAAL,CAAU;MACRC,QAAQ,EAAE,IADF;MAERL,OAAO,EAAED;IAFD,CAAV;IAIAZ,WAAW,CAACgB,IAAD,CAAX;EACD,CAlBD;;EAoBA/B,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,CAACgB,OAAX,EAAoB;MAClBhB,MAAM,CAACgB,OAAP,CAAeK,EAAf,CAAkB,cAAlB,EAAmCP,GAAD,IAAS;QACzCV,iBAAiB,CAAC;UAChBgB,QAAQ,EAAE,KADM;UAEhBL,OAAO,EAAED;QAFO,CAAD,CAAjB;MAID,CALD;IAMD;EACF,CATQ,EASN,EATM,CAAT;EAWA3B,SAAS,CAAC,MAAI;IACZgB,cAAc,IAAID,WAAW,CAAEoB,IAAD,IAAQ,CAAC,GAAGA,IAAJ,EAASnB,cAAT,CAAT,CAA7B;EACD,CAFQ,EAEP,CAACA,cAAD,CAFO,CAAT;EAIAhB,SAAS,CAAC,MAAM;IAAA;;IACd,sBAAAkB,SAAS,CAACW,OAAV,0EAAmBO,cAAnB,CAAkC;MAAEC,QAAQ,EAAE;IAAZ,CAAlC;EACD,CAFQ,EAEN,CAACvB,QAAD,CAFM,CAAT;EAIA,oBACE;IAAA,UAEIH,WAAW,iBACT,QAAC,SAAD;MAAA,wBACE;QAAK,SAAS,EAAC,aAAf;QAAA,wBACE;UAAK,SAAS,EAAC,cAAf;UAAA,wBACE;YAAK,SAAS,EAAC,QAAf;YAAA,uBACE;cACE,GAAG,EAAG,6BAA4BA,WAAW,CAAC2B,WAAY,EAD5D;cAEE,GAAG,EAAC;YAFN;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAME;YAAK,SAAS,EAAC,UAAf;YAAA,uBACE;cAAA,UAAK3B,WAAW,CAAC4B;YAAjB;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAWE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAK,SAAS,EAAC,eAAf;QAAA,UACGzB,QAAQ,CAAC0B,GAAT,CAAcZ,OAAD,IAAa;UACzB,oBACE;YAAK,GAAG,EAAEV,SAAV;YAAA,uBACE;cACE,SAAS,EAAG,WAAUU,OAAO,CAACK,QAAR,GACpB,QADoB,GAEpB,UACC,EAJL;cAAA,uBAME;gBAAK,SAAS,EAAC,UAAf;gBAAA,uBACE;kBAAA,UAAIL,OAAO,CAACA;gBAAZ;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA;YANF;cAAA;cAAA;cAAA;YAAA;UADF,GAA0BnB,MAAM,EAAhC;YAAA;YAAA;YAAA;UAAA,QADF;QAcD,CAfA;MADH;QAAA;QAAA;QAAA;MAAA,QAdF,eAgCE,QAAC,SAAD;QAAW,aAAa,EAAEiB;MAA1B;QAAA;QAAA;QAAA;MAAA,QAhCF;IAAA;MAAA;MAAA;MAAA;IAAA;EAHN,iBADF;AA0CD;;GApGuBhB,a;;KAAAA,a;AAsGxB,MAAM+B,SAAS,GAAGvC,MAAM,CAACwC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxEA;MAAMD,S"},"metadata":{},"sourceType":"module"}