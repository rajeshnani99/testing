{"ast":null,"code":"import { getClosestValue } from \"./chunk-G4WB2JLN.mjs\";\nimport { useBreakpoint } from \"./chunk-CI3LDA6F.mjs\"; // src/use-breakpoint-value.ts\n\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\n\nfunction useBreakpointValue(values, arg) {\n  var _a;\n\n  const opts = isObject(arg) ? arg : {\n    fallback: arg != null ? arg : \"base\"\n  };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme();\n  if (!breakpoint) return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(_ref => {\n    let [key, value] = _ref;\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { useBreakpointValue };","map":{"version":3,"names":["getClosestValue","useBreakpoint","useTheme","isObject","arrayToObjectNotation","useBreakpointValue","values","arg","_a","opts","fallback","breakpoint","theme","breakpoints","Array","from","__breakpoints","keys","obj","isArray","Object","fromEntries","entries","map","key","value"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/node_modules/@chakra-ui/media-query/dist/chunk-KSQA4OTT.mjs"],"sourcesContent":["import {\n  getClosestValue\n} from \"./chunk-G4WB2JLN.mjs\";\nimport {\n  useBreakpoint\n} from \"./chunk-CI3LDA6F.mjs\";\n\n// src/use-breakpoint-value.ts\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\nfunction useBreakpointValue(values, arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg != null ? arg : \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(\n    Object.entries(arrayToObjectNotation(values, breakpoints)).map(\n      ([key, value]) => [key, value]\n    )\n  ) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport {\n  useBreakpointValue\n};\n"],"mappings":"AAAA,SACEA,eADF,QAEO,sBAFP;AAGA,SACEC,aADF,QAEO,sBAFP,C,CAIA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,qBAAT,QAAsC,6BAAtC;;AACA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,GAApC,EAAyC;EACvC,IAAIC,EAAJ;;EACA,MAAMC,IAAI,GAAGN,QAAQ,CAACI,GAAD,CAAR,GAAgBA,GAAhB,GAAsB;IAAEG,QAAQ,EAAEH,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB;EAAhC,CAAnC;EACA,MAAMI,UAAU,GAAGV,aAAa,CAACQ,IAAD,CAAhC;EACA,MAAMG,KAAK,GAAGV,QAAQ,EAAtB;EACA,IAAI,CAACS,UAAL,EACE;EACF,MAAME,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW,CAAC,CAACP,EAAE,GAAGI,KAAK,CAACI,aAAZ,KAA8B,IAA9B,GAAqC,KAAK,CAA1C,GAA8CR,EAAE,CAACS,IAAlD,KAA2D,EAAtE,CAApB;EACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,OAAN,CAAcb,MAAd,IAAwBc,MAAM,CAACC,WAAP,CAClCD,MAAM,CAACE,OAAP,CAAelB,qBAAqB,CAACE,MAAD,EAASO,WAAT,CAApC,EAA2DU,GAA3D,CACE;IAAA,IAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;IAAA,OAAkB,CAACD,GAAD,EAAMC,KAAN,CAAlB;EAAA,CADF,CADkC,CAAxB,GAIRnB,MAJJ;EAKA,OAAON,eAAe,CAACkB,GAAD,EAAMP,UAAN,EAAkBE,WAAlB,CAAtB;AACD;;AAED,SACER,kBADF"},"metadata":{},"sourceType":"module"}