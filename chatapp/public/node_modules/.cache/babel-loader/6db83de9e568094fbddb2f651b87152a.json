{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Desktop/Dev/chatapp/public/src/components/ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport { getAllMessagesRoute, sendMessageRoute, allChats, sendMessageGroup } from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer(_ref) {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket,\n    groupChatName\n  } = _ref;\n  // console.log(`current chat :${JSON.stringify(currentChat)}`);\n  // console.log(`current user : ${JSON.stringify(currentUser)}`);\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [groupmessages, setGroupmessages] = useState([]);\n  const [currentgroup, setCurrentGroup] = useState();\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessagesRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n        console.log(response); //fetching single person chat Messages from db\n\n        console.log(\"chat message :\" + JSON.stringify(response.data));\n      }\n    };\n\n    fetchData();\n  }, [currentChat]);\n  useEffect(() => {\n    const fetchGroup = async () => {\n      if (currentChat) {\n        const response = await axios.get(allChats);\n        setGroupmessages(response.data);\n      }\n    };\n\n    fetchGroup();\n  }); //console.log(`group chat data :${JSON.stringify(groupmessages)}`);\n\n  const handleSendMsg = async msg => {\n    groupChatName === null || groupChatName === void 0 ? void 0 : groupChatName.map(id => {\n      console.log(\"current group id : \" + groupChatName.id);\n    });\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    console.log(`messages :${JSON.stringify(msgs)}`);\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs); // post message to db and emitting server\n    //console.log(\"sent Message :\" + JSON.stringify(msgs));\n  };\n\n  const handleGroupMsg = async msg => {\n    await axios.post(sendMessageGroup, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    console.log(`messages :${JSON.stringify(msgs)}`);\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieved\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]); //console.log(JSON.stringify(messages));\n  //console.log(`current chat data :  ${JSON.stringify(currentChat)}`);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 10\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(ChatContainer, \"uh5aejaA3gd8VasI2Re5Qq8QvcI=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 10% 80% 10%;\n\tgap: 0.1rem;\n\toverflow: hidden;\n\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\tgrid-template-rows: 15% 70% 15%;\n\t}\n\t.chat-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0 2rem;\n\t\t.user-details {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 1rem;\n\t\t\t.avatar {\n\t\t\t\timg {\n\t\t\t\t\theight: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.username {\n\t\t\t\th3 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.chat-messages {\n\t\tpadding: 1rem 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 1rem;\n\t\toverflow: auto;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 0.2rem;\n\t\t\t&-thumb {\n\t\t\t\tbackground-color: #ffffff39;\n\t\t\t\twidth: 0.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t}\n\t\t}\n\t\t.message {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t.content {\n\t\t\t\tmax-width: 40%;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t\tcolor: #d1d1d1;\n\t\t\t\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\t\t\t\tmax-width: 70%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.sended {\n\t\t\tjustify-content: flex-end;\n\t\t\t.content {\n\t\t\t\tbackground-color: #4f04ff21;\n\t\t\t}\n\t\t}\n\t\t.recieved {\n\t\t\tjustify-content: flex-start;\n\t\t\t.content {\n\t\t\t\tbackground-color: #9900ff20;\n\t\t\t}\n\t\t}\n\t}\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","axios","getAllMessagesRoute","sendMessageRoute","allChats","sendMessageGroup","v4","uuidv4","ChatContainer","currentChat","currentUser","socket","groupChatName","messages","setMessages","arrivalMessage","setArrivalMessage","groupmessages","setGroupmessages","currentgroup","setCurrentGroup","scrollRef","fetchData","response","post","from","_id","to","data","console","log","JSON","stringify","fetchGroup","get","handleSendMsg","msg","map","id","message","current","emit","msgs","push","fromSelf","handleGroupMsg","on","prev","scrollIntoView","behavior","avatarImage","username","Container","div"],"sources":["/Users/rajesh/Desktop/Dev/chatapp/public/src/components/ChatContainer.jsx"],"sourcesContent":["/** @format */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport axios from \"axios\";\nimport {\n\tgetAllMessagesRoute,\n\tsendMessageRoute,\n\tallChats,\n\tsendMessageGroup,\n} from \"../utils/APIRoutes\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function ChatContainer({\n\tcurrentChat,\n\tcurrentUser,\n\tsocket,\n\tgroupChatName,\n}) {\n\t// console.log(`current chat :${JSON.stringify(currentChat)}`);\n\t// console.log(`current user : ${JSON.stringify(currentUser)}`);\n\tconst [messages, setMessages] = useState([]);\n\tconst [arrivalMessage, setArrivalMessage] = useState(null);\n\tconst [groupmessages, setGroupmessages] = useState([]);\n\tconst [currentgroup, setCurrentGroup] = useState();\n\tconst scrollRef = useRef();\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tif (currentChat) {\n\t\t\t\tconst response = await axios.post(getAllMessagesRoute, {\n\t\t\t\t\tfrom: currentUser._id,\n\t\t\t\t\tto: currentChat._id,\n\t\t\t\t});\n\t\t\t\tsetMessages(response.data);\n\t\t\t\tconsole.log(response);\n\t\t\t\t//fetching single person chat Messages from db\n\t\t\t\tconsole.log(\"chat message :\" + JSON.stringify(response.data));\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, [currentChat]);\n\n\tuseEffect(() => {\n\t\tconst fetchGroup = async () => {\n\t\t\tif (currentChat) {\n\t\t\t\tconst response = await axios.get(allChats);\n\t\t\t\tsetGroupmessages(response.data);\n\t\t\t}\n\t\t};\n\t\tfetchGroup();\n\t});\n\t//console.log(`group chat data :${JSON.stringify(groupmessages)}`);\n\n\tconst handleSendMsg = async (msg) => {\n\t\tgroupChatName?.map((id) => {\n\t\t\tconsole.log(\"current group id : \" + groupChatName.id);\n\t\t});\n\t\tawait axios.post(sendMessageRoute, {\n\t\t\tfrom: currentUser._id,\n\t\t\tto: currentChat._id,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsocket.current.emit(\"send-msg\", {\n\t\t\tto: currentChat._id,\n\t\t\tfrom: currentUser._id,\n\t\t\tmessage: msg,\n\t\t});\n\n\t\tconst msgs = [...messages];\n\t\tconsole.log(`messages :${JSON.stringify(msgs)}`);\n\t\tmsgs.push({\n\t\t\tfromSelf: true,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsetMessages(msgs);\n\t\t// post message to db and emitting server\n\t\t//console.log(\"sent Message :\" + JSON.stringify(msgs));\n\t};\n\n\tconst handleGroupMsg = async (msg) => {\n\t\tawait axios.post(sendMessageGroup, {\n\t\t\tfrom: currentUser._id,\n\t\t\tto: currentChat._id,\n\t\t\tmessage: msg,\n\t\t});\n\t\tconst msgs = [...messages];\n\t\tconsole.log(`messages :${JSON.stringify(msgs)}`);\n\t\tmsgs.push({\n\t\t\tfromSelf: true,\n\t\t\tmessage: msg,\n\t\t});\n\t\tsetMessages(msgs);\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket.current) {\n\t\t\tsocket.current.on(\"msg-recieved\", (msg) => {\n\t\t\t\tsetArrivalMessage({\n\t\t\t\t\tfromSelf: false,\n\t\t\t\t\tmessage: msg,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tarrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n\t}, [arrivalMessage]);\n\n\tuseEffect(() => {\n\t\tscrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n\t}, [messages]);\n\n\t//console.log(JSON.stringify(messages));\n\t//console.log(`current chat data :  ${JSON.stringify(currentChat)}`);\n\treturn (\n\t\t<>\n\t\t\t{currentChat && (\n\t\t\t\t<Container>\n\t\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t\t\t<div className=\"avatar\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n\t\t\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t<h3>{currentChat.username}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Logout />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t\t{messages.map((message) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div ref={scrollRef} key={uuidv4()}>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`message ${\n\t\t\t\t\t\t\t\t\t\t\tmessage.fromSelf ? \"sended\" : \"recieved\"\n\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"content \">\n\t\t\t\t\t\t\t\t\t\t\t<p>{message.message}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<ChatInput handleSendMsg={handleSendMsg} />\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nconst Container = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: 10% 80% 10%;\n\tgap: 0.1rem;\n\toverflow: hidden;\n\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\tgrid-template-rows: 15% 70% 15%;\n\t}\n\t.chat-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 0 2rem;\n\t\t.user-details {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tgap: 1rem;\n\t\t\t.avatar {\n\t\t\t\timg {\n\t\t\t\t\theight: 3rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.username {\n\t\t\t\th3 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.chat-messages {\n\t\tpadding: 1rem 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 1rem;\n\t\toverflow: auto;\n\t\t&::-webkit-scrollbar {\n\t\t\twidth: 0.2rem;\n\t\t\t&-thumb {\n\t\t\t\tbackground-color: #ffffff39;\n\t\t\t\twidth: 0.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t}\n\t\t}\n\t\t.message {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t.content {\n\t\t\t\tmax-width: 40%;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: 1.1rem;\n\t\t\t\tborder-radius: 1rem;\n\t\t\t\tcolor: #d1d1d1;\n\t\t\t\t@media screen and (min-width: 720px) and (max-width: 1080px) {\n\t\t\t\t\tmax-width: 70%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.sended {\n\t\t\tjustify-content: flex-end;\n\t\t\t.content {\n\t\t\t\tbackground-color: #4f04ff21;\n\t\t\t}\n\t\t}\n\t\t.recieved {\n\t\t\tjustify-content: flex-start;\n\t\t\t.content {\n\t\t\t\tbackground-color: #9900ff20;\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"mappings":"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E,OAAD,IAAa;UAC1B,oBACC;YAAK,GAAG,EAAElB,SAAV;YAAA,uBACC;cACC,SAAS,EAAG,WACXkB,OAAO,CAACK,QAAR,GAAmB,QAAnB,GAA8B,UAC9B,EAHF;cAAA,uBAIC;gBAAK,SAAS,EAAC,UAAf;gBAAA,uBACC;kBAAA,UAAIL,OAAO,CAACA;gBAAZ;kBAAA;kBAAA;kBAAA;gBAAA;cADD;gBAAA;gBAAA;gBAAA;cAAA;YAJD;cAAA;cAAA;cAAA;YAAA;UADD,GAA0BhC,MAAM,EAAhC;YAAA;YAAA;YAAA;UAAA,QADD;QAYA,CAbA;MADF;QAAA;QAAA;QAAA;MAAA,QAfD,eA+BC,QAAC,SAAD;QAAW,aAAa,EAAE4B;MAA1B;QAAA;QAAA;QAAA;MAAA,QA/BD;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF,iBADD;AAuCA;;GA9IuB3B,a;;KAAAA,a;AAgJxB,MAAM4C,SAAS,GAAGtD,MAAM,CAACuD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxEA;MAAMD,S"},"metadata":{},"sourceType":"module"}