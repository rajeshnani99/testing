{"ast":null,"code":"import { useAttributeObserver } from \"./chunk-XRH675A5.mjs\";\nimport { useSpinner } from \"./chunk-JCNYS6PS.mjs\"; // src/use-number-input.ts\n\nimport { useCounter } from \"@chakra-ui/counter\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\n\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\n\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null) return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey) return true;\n  return isValid(event.key);\n}\n\nfunction useNumberInput() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(isValidCharacterProp != null ? isValidCharacterProp : isFloatingPointNumericCharacter);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(value => value.split(\"\").filter(isValidCharacter).join(\"\"), [isValidCharacter]);\n  const parse = useCallback(value => {\n    var _a;\n\n    return (_a = parseValue == null ? void 0 : parseValue(value)) != null ? _a : value;\n  }, [parseValue]);\n  const format = useCallback(value => {\n    var _a;\n\n    return ((_a = formatValue == null ? void 0 : formatValue(value)) != null ? _a : value).toString();\n  }, [formatValue]);\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.value != counter.value;\n\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  const decrement = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(incrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  useAttributeObserver(decrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  const onChange = useCallback(event => {\n    const evt = event.nativeEvent;\n    if (evt.isComposing) return;\n    const parsedInput = parse(event.currentTarget.value);\n    updateFn(sanitize(parsedInput));\n    inputSelectionRef.current = {\n      start: event.currentTarget.selectionStart,\n      end: event.currentTarget.selectionEnd\n    };\n  }, [updateFn, sanitize, parse]);\n\n  const _onFocus = useCallback(event => {\n    var _a, _b, _c;\n\n    onFocus == null ? void 0 : onFocus(event);\n    if (!inputSelectionRef.current) return;\n    event.target.selectionStart = (_b = inputSelectionRef.current.start) != null ? _b : (_a = event.currentTarget.value) == null ? void 0 : _a.length;\n    event.currentTarget.selectionEnd = (_c = inputSelectionRef.current.end) != null ? _c : event.currentTarget.selectionStart;\n  }, [onFocus]);\n\n  const onKeyDown = useCallback(event => {\n    if (event.nativeEvent.isComposing) return;\n\n    if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n      event.preventDefault();\n    }\n\n    const stepFactor = getStepFactor(event) * stepProp;\n    const eventKey = event.key;\n    const keyMap = {\n      ArrowUp: () => increment(stepFactor),\n      ArrowDown: () => decrement(stepFactor),\n      Home: () => updateFn(min),\n      End: () => updateFn(max)\n    };\n    const action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]);\n\n  const getStepFactor = event => {\n    let ratio = 1;\n\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n\n    return ratio;\n  };\n\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText == null ? void 0 : getAriaValueText(counter.value);\n    if (text != null) return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\") return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        var _a;\n\n        (_a = inputRef.current) == null ? void 0 : _a.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(event => {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  const spinDown = useCallback(event => {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  useEventListener(() => inputRef.current, \"wheel\", event => {\n    var _a, _b;\n\n    const doc = (_b = (_a = inputRef.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n    const isInputFocused = doc.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    const stepFactor = getStepFactor(event) * stepProp;\n    const direction = Math.sign(event.deltaY);\n\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, {\n    passive: false\n  });\n  const getIncrementButtonProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return { ...props2,\n      ref: mergeRefs(ref, incrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinUp(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  const getDecrementButtonProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return { ...props2,\n      ref: mergeRefs(ref, decrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinDown(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  const getInputProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    var _a, _b, _c, _d;\n\n    return {\n      name,\n      inputMode,\n      type: \"text\",\n      pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id,\n      disabled: isDisabled,\n      ...props2,\n      readOnly: (_a = props2.readOnly) != null ? _a : isReadOnly,\n      \"aria-readonly\": (_b = props2.readOnly) != null ? _b : isReadOnly,\n      \"aria-required\": (_c = props2.required) != null ? _c : isRequired,\n      required: (_d = props2.required) != null ? _d : isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: format(counter.value),\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, _onFocus, () => setFocused(true)),\n      onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n    };\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, format, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, _onFocus, onBlur, onInputBlur]);\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\n\nexport { useNumberInput };","map":{"version":3,"names":["useAttributeObserver","useSpinner","useCounter","useEventListener","useUpdateEffect","useSafeLayoutEffect","useCallbackRef","mergeRefs","ariaAttr","callAllHandlers","useCallback","useMemo","useRef","useState","FLOATING_POINT_REGEX","isFloatingPointNumericCharacter","character","test","isValidNumericKeyboardEvent","event","isValid","key","isModifierKey","ctrlKey","altKey","metaKey","isSingleCharacterKey","length","useNumberInput","props","focusInputOnChange","clampValueOnBlur","keepWithinRange","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","step","stepProp","isReadOnly","isDisabled","isRequired","isInvalid","pattern","inputMode","allowMouseWheel","id","onChange","_","precision","name","ariaDescBy","ariaLabel","ariaLabelledBy","onFocus","onFocusProp","onBlur","onBlurProp","onInvalid","onInvalidProp","getAriaValueText","getAriaValueTextProp","isValidCharacter","isValidCharacterProp","format","formatValue","parse","parseValue","htmlProps","counter","update","updateFn","increment","incrementFn","decrement","decrementFn","isFocused","setFocused","isInteractive","inputRef","inputSelectionRef","incrementButtonRef","decrementButtonRef","sanitize","value","split","filter","join","_a","toString","valueAsNumber","current","notInSync","parsedInput","setValue","spinner","stop","isSpinning","evt","nativeEvent","isComposing","currentTarget","start","selectionStart","end","selectionEnd","_onFocus","_b","_c","target","onKeyDown","preventDefault","stepFactor","getStepFactor","eventKey","keyMap","ArrowUp","ArrowDown","Home","End","action","ratio","shiftKey","ariaValueText","text","defaultText","validateAndClamp","next","valueStartsWithE","cast","onInputBlur","focusInput","requestAnimationFrame","focus","spinUp","up","spinDown","down","doc","ownerDocument","document","isInputFocused","activeElement","direction","Math","sign","deltaY","passive","getIncrementButtonProps","props2","ref","disabled","isAtMax","role","tabIndex","onPointerDown","button","onPointerLeave","onPointerUp","getDecrementButtonProps","isAtMin","getInputProps","_d","type","readOnly","required","isNaN","isOutOfRange","autoComplete","autoCorrect"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/node_modules/@chakra-ui/number-input/dist/chunk-RBDW77H4.mjs"],"sourcesContent":["import {\n  useAttributeObserver\n} from \"./chunk-XRH675A5.mjs\";\nimport {\n  useSpinner\n} from \"./chunk-JCNYS6PS.mjs\";\n\n// src/use-number-input.ts\nimport { useCounter } from \"@chakra-ui/counter\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null)\n    return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey)\n    return true;\n  return isValid(event.key);\n}\nfunction useNumberInput(props = {}) {\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(\n    isValidCharacterProp != null ? isValidCharacterProp : isFloatingPointNumericCharacter\n  );\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(\n    (value) => value.split(\"\").filter(isValidCharacter).join(\"\"),\n    [isValidCharacter]\n  );\n  const parse = useCallback(\n    (value) => {\n      var _a;\n      return (_a = parseValue == null ? void 0 : parseValue(value)) != null ? _a : value;\n    },\n    [parseValue]\n  );\n  const format = useCallback(\n    (value) => {\n      var _a;\n      return ((_a = formatValue == null ? void 0 : formatValue(value)) != null ? _a : value).toString();\n    },\n    [formatValue]\n  );\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        incrementFn(step);\n      }\n    },\n    [incrementFn, isInteractive, stepProp]\n  );\n  const decrement = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        decrementFn(step);\n      }\n    },\n    [decrementFn, isInteractive, stepProp]\n  );\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(\n    incrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  useAttributeObserver(\n    decrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  const onChange = useCallback(\n    (event) => {\n      const evt = event.nativeEvent;\n      if (evt.isComposing)\n        return;\n      const parsedInput = parse(event.currentTarget.value);\n      updateFn(sanitize(parsedInput));\n      inputSelectionRef.current = {\n        start: event.currentTarget.selectionStart,\n        end: event.currentTarget.selectionEnd\n      };\n    },\n    [updateFn, sanitize, parse]\n  );\n  const _onFocus = useCallback(\n    (event) => {\n      var _a, _b, _c;\n      onFocus == null ? void 0 : onFocus(event);\n      if (!inputSelectionRef.current)\n        return;\n      event.target.selectionStart = (_b = inputSelectionRef.current.start) != null ? _b : (_a = event.currentTarget.value) == null ? void 0 : _a.length;\n      event.currentTarget.selectionEnd = (_c = inputSelectionRef.current.end) != null ? _c : event.currentTarget.selectionStart;\n    },\n    [onFocus]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.nativeEvent.isComposing)\n        return;\n      if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n        event.preventDefault();\n      }\n      const stepFactor = getStepFactor(event) * stepProp;\n      const eventKey = event.key;\n      const keyMap = {\n        ArrowUp: () => increment(stepFactor),\n        ArrowDown: () => decrement(stepFactor),\n        Home: () => updateFn(min),\n        End: () => updateFn(max)\n      };\n      const action = keyMap[eventKey];\n      if (action) {\n        event.preventDefault();\n        action(event);\n      }\n    },\n    [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]\n  );\n  const getStepFactor = (event) => {\n    let ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText == null ? void 0 : getAriaValueText(counter.value);\n    if (text != null)\n      return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\")\n      return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = inputRef.current) == null ? void 0 : _a.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.up();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  const spinDown = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.down();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  useEventListener(\n    () => inputRef.current,\n    \"wheel\",\n    (event) => {\n      var _a, _b;\n      const doc = (_b = (_a = inputRef.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n      const isInputFocused = doc.activeElement === inputRef.current;\n      if (!allowMouseWheel || !isInputFocused)\n        return;\n      event.preventDefault();\n      const stepFactor = getStepFactor(event) * stepProp;\n      const direction = Math.sign(event.deltaY);\n      if (direction === -1) {\n        increment(stepFactor);\n      } else if (direction === 1) {\n        decrement(stepFactor);\n      }\n    },\n    { passive: false }\n  );\n  const getIncrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, incrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinUp(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]\n  );\n  const getDecrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, decrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinDown(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]\n  );\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      var _a, _b, _c, _d;\n      return {\n        name,\n        inputMode,\n        type: \"text\",\n        pattern,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-label\": ariaLabel,\n        \"aria-describedby\": ariaDescBy,\n        id,\n        disabled: isDisabled,\n        ...props2,\n        readOnly: (_a = props2.readOnly) != null ? _a : isReadOnly,\n        \"aria-readonly\": (_b = props2.readOnly) != null ? _b : isReadOnly,\n        \"aria-required\": (_c = props2.required) != null ? _c : isRequired,\n        required: (_d = props2.required) != null ? _d : isRequired,\n        ref: mergeRefs(inputRef, ref),\n        value: format(counter.value),\n        role: \"spinbutton\",\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n        \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n        \"aria-valuetext\": ariaValueText,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        onChange: callAllHandlers(props2.onChange, onChange),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(\n          props2.onFocus,\n          _onFocus,\n          () => setFocused(true)\n        ),\n        onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n      };\n    },\n    [\n      name,\n      inputMode,\n      pattern,\n      ariaLabelledBy,\n      ariaLabel,\n      format,\n      ariaDescBy,\n      id,\n      isDisabled,\n      isRequired,\n      isReadOnly,\n      isInvalid,\n      counter.value,\n      counter.valueAsNumber,\n      counter.isOutOfRange,\n      min,\n      max,\n      ariaValueText,\n      onChange,\n      onKeyDown,\n      _onFocus,\n      onBlur,\n      onInputBlur\n    ]\n  );\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\n\nexport {\n  useNumberInput\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}