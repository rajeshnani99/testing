{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Desktop/ChatApp/reactchatapp/public/src/components/GroupChatmodal.js\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure, FormControl, Input, useToast, Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupChatModal = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast(); // const { user, chats, setChats } = ChatState();\n  // const handleGroup = (userToAdd) => {\n  // \tif (selectedUsers.includes(userToAdd)) {\n  // \t\ttoast({\n  // \t\t\ttitle: \"User already added\",\n  // \t\t\tstatus: \"warning\",\n  // \t\t\tduration: 5000,\n  // \t\t\tisClosable: true,\n  // \t\t\tposition: \"top\",\n  // \t\t});\n  // \t\treturn;\n  // \t}\n  // \tsetSelectedUsers([...selectedUsers, userToAdd]);\n  // };\n  // const handleSearch = async (query) => {\n  // \tsetSearch(query);\n  // \tif (!query) {\n  // \t\treturn;\n  // \t}\n  // \ttry {\n  // \t\tsetLoading(true);\n  // \t\tconst config = {\n  // \t\t\theaders: {\n  // \t\t\t\tAuthorization: `Bearer ${user.token}`,\n  // \t\t\t},\n  // \t\t};\n  // \t\tconst { data } = await axios.get(`/api/user?search=${search}`, config);\n  // \t\tconsole.log(data);\n  // \t\tsetLoading(false);\n  // \t\tsetSearchResult(data);\n  // \t} catch (error) {\n  // \t\ttoast({\n  // \t\t\ttitle: \"Error Occured!\",\n  // \t\t\tdescription: \"Failed to Load the Search Results\",\n  // \t\t\tstatus: \"error\",\n  // \t\t\tduration: 5000,\n  // \t\t\tisClosable: true,\n  // \t\t\tposition: \"bottom-left\",\n  // \t\t});\n  // \t}\n  // };\n  // const handleDelete = (delUser) => {\n  // \tsetSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  // };\n  // const handleSubmit = async () => {\n  // \tif (!groupChatName || !selectedUsers) {\n  // \t\ttoast({\n  // \t\t\ttitle: \"Please fill all the feilds\",\n  // \t\t\tstatus: \"warning\",\n  // \t\t\tduration: 5000,\n  // \t\t\tisClosable: true,\n  // \t\t\tposition: \"top\",\n  // \t\t});\n  // \t\treturn;\n  // \t}\n  // \ttry {\n  // \t\tconst config = {\n  // \t\t\theaders: {\n  // \t\t\t\tAuthorization: `Bearer ${user.token}`,\n  // \t\t\t},\n  // \t\t};\n  // \t\tconst { data } = await axios.post(\n  // \t\t\t`/api/chat/group`,\n  // \t\t\t{\n  // \t\t\t\tname: groupChatName,\n  // \t\t\t\tusers: JSON.stringify(selectedUsers.map((u) => u._id)),\n  // \t\t\t},\n  // \t\t\tconfig\n  // \t\t);\n  // \t\tsetChats([data, ...chats]);\n  // \t\tonClose();\n  // \t\ttoast({\n  // \t\t\ttitle: \"New Group Chat Created!\",\n  // \t\t\tstatus: \"success\",\n  // \t\t\tduration: 5000,\n  // \t\t\tisClosable: true,\n  // \t\t\tposition: \"bottom\",\n  // \t\t});\n  // \t} catch (error) {\n  // \t\ttoast({\n  // \t\t\ttitle: \"Failed to Create the Chat!\",\n  // \t\t\tdescription: error.response.data,\n  // \t\t\tstatus: \"error\",\n  // \t\t\tduration: 5000,\n  // \t\t\tisClosable: true,\n  // \t\t\tposition: \"bottom\",\n  // \t\t});\n  // \t}\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onOpen,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: onClose,\n      isOpen: isOpen,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: \"Create Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          d: \"flex\",\n          flexDir: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add Users eg: John, Piyush, Jane\",\n              mb: 1 // onChange={(e) => handleSearch(e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"50%\",\n            d: \"flex\",\n            flexWrap: \"wrap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GroupChatModal, \"PHSzC1yTrtxvyG3eWGbgwqRvKTk=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = GroupChatModal;\nexport default GroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupChatModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","FormControl","Input","useToast","Box","axios","useState","GroupChatModal","children","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","e","target","value"],"sources":["/Users/rajesh/Desktop/ChatApp/reactchatapp/public/src/components/GroupChatmodal.js"],"sourcesContent":["/** @format */\n\nimport {\n\tModal,\n\tModalOverlay,\n\tModalContent,\n\tModalHeader,\n\tModalFooter,\n\tModalBody,\n\tModalCloseButton,\n\tButton,\n\tuseDisclosure,\n\tFormControl,\n\tInput,\n\tuseToast,\n\tBox,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst GroupChatModal = ({ children }) => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\tconst [groupChatName, setGroupChatName] = useState();\n\tconst [selectedUsers, setSelectedUsers] = useState([]);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [searchResult, setSearchResult] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst toast = useToast();\n\n\t// const { user, chats, setChats } = ChatState();\n\n\t// const handleGroup = (userToAdd) => {\n\t// \tif (selectedUsers.includes(userToAdd)) {\n\t// \t\ttoast({\n\t// \t\t\ttitle: \"User already added\",\n\t// \t\t\tstatus: \"warning\",\n\t// \t\t\tduration: 5000,\n\t// \t\t\tisClosable: true,\n\t// \t\t\tposition: \"top\",\n\t// \t\t});\n\t// \t\treturn;\n\t// \t}\n\n\t// \tsetSelectedUsers([...selectedUsers, userToAdd]);\n\t// };\n\n\t// const handleSearch = async (query) => {\n\t// \tsetSearch(query);\n\t// \tif (!query) {\n\t// \t\treturn;\n\t// \t}\n\n\t// \ttry {\n\t// \t\tsetLoading(true);\n\t// \t\tconst config = {\n\t// \t\t\theaders: {\n\t// \t\t\t\tAuthorization: `Bearer ${user.token}`,\n\t// \t\t\t},\n\t// \t\t};\n\t// \t\tconst { data } = await axios.get(`/api/user?search=${search}`, config);\n\t// \t\tconsole.log(data);\n\t// \t\tsetLoading(false);\n\t// \t\tsetSearchResult(data);\n\t// \t} catch (error) {\n\t// \t\ttoast({\n\t// \t\t\ttitle: \"Error Occured!\",\n\t// \t\t\tdescription: \"Failed to Load the Search Results\",\n\t// \t\t\tstatus: \"error\",\n\t// \t\t\tduration: 5000,\n\t// \t\t\tisClosable: true,\n\t// \t\t\tposition: \"bottom-left\",\n\t// \t\t});\n\t// \t}\n\t// };\n\n\t// const handleDelete = (delUser) => {\n\t// \tsetSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n\t// };\n\n\t// const handleSubmit = async () => {\n\t// \tif (!groupChatName || !selectedUsers) {\n\t// \t\ttoast({\n\t// \t\t\ttitle: \"Please fill all the feilds\",\n\t// \t\t\tstatus: \"warning\",\n\t// \t\t\tduration: 5000,\n\t// \t\t\tisClosable: true,\n\t// \t\t\tposition: \"top\",\n\t// \t\t});\n\t// \t\treturn;\n\t// \t}\n\n\t// \ttry {\n\t// \t\tconst config = {\n\t// \t\t\theaders: {\n\t// \t\t\t\tAuthorization: `Bearer ${user.token}`,\n\t// \t\t\t},\n\t// \t\t};\n\t// \t\tconst { data } = await axios.post(\n\t// \t\t\t`/api/chat/group`,\n\t// \t\t\t{\n\t// \t\t\t\tname: groupChatName,\n\t// \t\t\t\tusers: JSON.stringify(selectedUsers.map((u) => u._id)),\n\t// \t\t\t},\n\t// \t\t\tconfig\n\t// \t\t);\n\t// \t\tsetChats([data, ...chats]);\n\t// \t\tonClose();\n\t// \t\ttoast({\n\t// \t\t\ttitle: \"New Group Chat Created!\",\n\t// \t\t\tstatus: \"success\",\n\t// \t\t\tduration: 5000,\n\t// \t\t\tisClosable: true,\n\t// \t\t\tposition: \"bottom\",\n\t// \t\t});\n\t// \t} catch (error) {\n\t// \t\ttoast({\n\t// \t\t\ttitle: \"Failed to Create the Chat!\",\n\t// \t\t\tdescription: error.response.data,\n\t// \t\t\tstatus: \"error\",\n\t// \t\t\tduration: 5000,\n\t// \t\t\tisClosable: true,\n\t// \t\t\tposition: \"bottom\",\n\t// \t\t});\n\t// \t}\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t<span onClick={onOpen}>{children}</span>\n\n\t\t\t<Modal onClose={onClose} isOpen={isOpen} isCentered>\n\t\t\t\t<ModalOverlay />\n\t\t\t\t<ModalContent>\n\t\t\t\t\t<ModalHeader\n\t\t\t\t\t\tfontSize=\"35px\"\n\t\t\t\t\t\tfontFamily=\"Work sans\"\n\t\t\t\t\t\td=\"flex\"\n\t\t\t\t\t\tjustifyContent=\"center\">\n\t\t\t\t\t\tCreate Group Chat\n\t\t\t\t\t</ModalHeader>\n\t\t\t\t\t<ModalCloseButton />\n\t\t\t\t\t<ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Chat Name\"\n\t\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\t\tonChange={(e) => setGroupChatName(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Add Users eg: John, Piyush, Jane\"\n\t\t\t\t\t\t\t\tmb={1}\n\t\t\t\t\t\t\t\t// onChange={(e) => handleSearch(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t<Box w=\"50%\" d=\"flex\" flexWrap=\"wrap\">\n\t\t\t\t\t\t\t{/* {selectedUsers.map((u) => (\n\t\t\t\t\t\t\t\t// <UserBadgeItem\n\t\t\t\t\t\t\t\t// \tkey={u._id}\n\t\t\t\t\t\t\t\t// \tuser={u}\n\t\t\t\t\t\t\t\t// \thandleFunction={() => handleDelete(u)}\n\t\t\t\t\t\t\t\t// />\n\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* {loading ? (\n\t\t\t\t\t\t\t// <ChatLoading />\n\t\t\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t// \tsearchResult\n\t\t\t\t\t\t// \t\t?.slice(0, 4)\n\t\t\t\t\t\t// \t\t.map((user) => (\n\t\t\t\t\t\t// \t\t\t<UserListItem\n\t\t\t\t\t\t// \t\t\t\tkey={user._id}\n\t\t\t\t\t\t// \t\t\t\tuser={user}\n\t\t\t\t\t\t// \t\t\t\thandleFunction={() => handleGroup(user)}\n\t\t\t\t\t\t// \t\t\t/>\n\t\t\t\t\t\t// \t\t))\n\t\t\t\t\t\t// )} */}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t{/* //onClick={handleSubmit} */}\n\t\t\t\t\t\t<Button colorScheme=\"blue\">Create Chat</Button>\n\t\t\t\t\t</ModalFooter>\n\t\t\t\t</ModalContent>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default GroupChatModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}